loadstring(game:HttpGet("https://raw.githubusercontent.com/Hiepphamone/lowmap/main/lowmap"))()




























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































repeat wait() until game.Players
repeat wait() until game.Players.LocalPlayer
repeat wait() until game.ReplicatedStorage
repeat wait() until game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui")
repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Main")
getgenv().ticka = tick()
local plr = game.Players.LocalPlayer
local Client = require(game.ReplicatedStorage.Library.Client)
spawn(function()
    while true do wait(1)
        if tick() - getgenv().ticka > 60 * 10 then
            game:Shutdown()
        end
    end
end)

function dbuoi()
    for i,v in pairs(game:GetService("Workspace")["__THINGS"].Orbs:GetChildren()) do
        v.CanCollide = false
        v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
    end
    
    for i,v in pairs(game:GetService("Workspace")["__THINGS"].Lootbags:GetDescendants()) do
        if v:IsA("MeshPart") then
            v.CanCollide = false
            v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
        end
    end
end

function attack()
    local a = {}
    for i,v in pairs(game:GetService("Workspace")["__THINGS"].Breakables:GetChildren()) do
        for i1,v1 in pairs(v:GetChildren()) do
            if (v1.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 60 and #a < 2 then
                return v.Name
            end
        end
    end
end

function destroyvipzone()
    for i,v in pairs(getmapne()["1 | Spawn"].INTERACT.BREAK_ZONES:GetChildren()) do
        if tostring(v.Position) == "214.12213134765625, 24.417156219482422, -587.1192626953125" then
            print("A")
           v:Destroy() 
        end
    end
end

function jump()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, 32, false, game)
    wait(4)
    game:GetService("VirtualInputManager"):SendKeyEvent(false, 32, false, game)
end

pcall(destroyvipzone)

game:GetService("RunService").Heartbeat:Connect(function()
    spawn(function()
        game:GetService("ReplicatedStorage").Network.Breakables_PlayerDealDamage:FireServer(attack())
    end)
end)

function hasunlockzones(name) 
    return Client.ZoneCmds.Owns(name)
end

function getnextmap()
    return Client.ZoneCmds.GetNextZone()
end

function getlastmap()
    return Client.ZoneCmds.GetMaxOwnedZone()
end

function formatclient(name)
    local pattern = " table: .*$"
    local result = name:gsub(pattern, "") 
    return result
end

function formatmap(text)
    local result = string.match(text, "| (.*)$")
    return result
end

function getmapne()
    if game.PlaceId == 16498369169 then
        return workspace.Map2
    else
        return workspace.Map
    end
end

function getlocation()
    for i,v in pairs(getmapne():GetChildren()) do
        if formatmap(v.Name) == formatclient(getlastmap()) and v:FindFirstChild("INTERACT") then
            return v.INTERACT.BREAKABLE_SPAWNS.Main
        end
    end
    return false
end

function getfoderlastmap()
    local a = nil
    local b = 0
    for i,v in pairs(getmapne():GetChildren()) do
        local number = tonumber(string.match(v.Name, "(%d+)"))
        local namemap = formatmap(v.Name)
        if number ~= nil and v:FindFirstChild("INTERACT") then
            if number > b and hasunlockzones(namemap) then
                b = number
                a = v.INTERACT.BREAK_ZONES.BREAK_ZONE
            end
        end
    end
    return a
end

function randompotion(number)
    local Client = require(game.ReplicatedStorage.Library.Client)
    for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Potion._byUID) do
        return i
    end
    return false
end

function autoeatpotion()
    if randompotion() ~= false then
        Client.PotionCmds.Consume(randompotion())
    end
end

function Rebirth() 
    local a = Client.RebirthCmds.GetNextRebirth()
    if a ~= nil then
        Client.RebirthCmds.Rebirth(tostring(a._id))
    end
end

getgenv().numberk = 1

function collectrank()
    local args = {
        [1] = getgenv().numberk
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Ranks_ClaimReward"):FireServer(unpack(args))
    getgenv().numberk = getgenv().numberk + 1
    if getgenv().numberk >= 30 then
        getgenv().numberk = 1
    end
end

function unlockmapattk()
    game:GetService("ReplicatedStorage").Network.Zones_RequestPurchase:InvokeServer(formatclient(getnextmap()))
    pcall(dbuoi)
    game:GetService("ReplicatedStorage").Network.SqueakyToy_Consume:InvokeServer()
    game:GetService("ReplicatedStorage").Network.ChristmasCookie_Consume:InvokeServer()
    game:GetService("ReplicatedStorage").Network.ToyBall_Consume:InvokeServer()
    game:GetService("ReplicatedStorage").Network.ToyBone_Consume:InvokeServer()
end

function autotnt() 
    game:GetService("ReplicatedStorage").Network.TNT_Consume:InvokeServer()
end

function getflag()
    for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Misc._byUID) do
        if v._data.id == "Coins Flag" then
            return {v._data.id,i}
        end
    end
end

function autoflag()
    if hasunlockzones("No Path Forest") then
        Client.ZoneFlagCmds.Consume(getflag()[1],getflag()[2])
    end
end

function loop3()
    while true do wait(60)
        pcall(autoflag)
    end
end

spawn(loop3)

function autocreatetnt() 
    if hasunlockzones("Treasure Dungeon") then
        game:GetService("ReplicatedStorage").Network["TNT_Crate_Consume"]:InvokeServer()
    end
end

function loop1()
    while true do wait(5)
        pcall(unlockmapattk)
        pcall(autoeatpotion)
        pcall(autotnt)
        pcall(autocreatetnt)
    end
end

function loop2()
    while true do wait(5)
        pcall(Rebirth)
    end
end

spawn(loop1)
spawn(loop2)

function getrank()
    return Client.Save.Get().Rank
end

function enchant(enchantname,rate)
    for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Enchant._byUID) do
        if v._data.id == enchantname and v._data.tn == rate then
            return i
        end
    end
end

local args = {
    [1] = 1
}

game:GetService("ReplicatedStorage").Network.Enchants_ClearSlot:FireServer(unpack(args))
wait(3)
local args = {
    [1] = 2
}

game:GetService("ReplicatedStorage").Network.Enchants_ClearSlot:FireServer(unpack(args))

local Client = require(game.ReplicatedStorage.Library.Client)

function autoequipentchant()
    Client.EnchantCmds.Equip(enchant('Magnet', 3),1)
    wait(2)
    Client.EnchantCmds.Equip(enchant('Coins', 5),1)
end

function loop4()
    while true do wait(5)
        pcall(autoequipentchant)
    end
end

spawn(loop4)

function checkmail()
    local tb = {
        [1] = {
    
        }
    }
    local a = game:GetService("ReplicatedStorage").Network["Mailbox: Get"]:InvokeServer()
    if type(a) == 'table' then
        if a.Inbox then
            for i,v in pairs(a.Inbox) do
                table.insert(tb[1], v.uuid)
            end
        end
    end
    if #tb[1] > 0 then
        return tb
    else
        return false
    end
end

if game.PlaceId == 16498369169 then
    game:GetService("ReplicatedStorage").Network.Pets_ToggleFavoriteMode:FireServer()
    wait(1)
    game:GetService("ReplicatedStorage").Network.Pets_ToggleFavoriteMode:FireServer()
end

if not hasunlockzones("Cyber Base Camp") then
    function unlockmap()
        local a = Client.Save.Get()
        local b = Client.RankCmds.GetMaxPurchasableEquipSlots()
        local abz = Client.RebirthCmds.GetNextRebirth()
        if checkmail() ~= false then
            wait(5)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(147.03858947753906, 23.593482971191406, -349.0108337402344)
            wait(2)
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Claim"):InvokeServer(unpack(checkmail()))
            return
        end
        if Client.PetCmds.IsFavoriteModeEnabled() == true then
            game:GetService("ReplicatedStorage").Network.Pets_ToggleFavoriteMode:FireServer()
        end
        -- if hasunlockzones("Rainbow Road") then
        --     if game.PlaceId == 16498369169 then
        --         game:GetService("ReplicatedStorage").Network.World1Teleport:InvokeServer()
        --         wait(.5)
        --         game:Shutdown()
        --     end
        -- end
        if hasunlockzones("Rainbow Road") and abz == nil and game.PlaceId ~= 16498369169 then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-62.38117218017578, 208.9638671875, 6744.44775390625)
            game:GetService("ReplicatedStorage").Network.RequestTechRocket:FireServer()
            return 
        end
        if a.MaxPetsEquipped < b + 4 and hasunlockzones("Green Forest") and game.PlaceId ~= 16498369169 and b < 50 then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(691.4805297851562, 16.557279586791992, -251.11878967285156)
            for i =1 , b do
                local args = {
                    [1] = i
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("EquipSlotsMachine_RequestPurchase"):InvokeServer(unpack(args))
            end
        else
            if getlocation() ~= false then
                if (plr.Character.HumanoidRootPart.Position - getlocation().Position).Magnitude > 30 then
                    plr.Character.HumanoidRootPart.CFrame = getlocation().CFrame * CFrame.new(0,10,0)
                end
            else
                plr.Character.HumanoidRootPart.CFrame = getfoderlastmap().CFrame * CFrame.new(0,10,0)
            end
        end
    end

    function click2(a)
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-50,a.AbsolutePosition.Y+50,0,true,a,1)
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-50,a.AbsolutePosition.Y+50,0,false,a,1)
    end

    spawn(function()
        while true do wait(1)
            pcall(function() 
                click2(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Contents.Ok)
            end)
        end
    end)

    function getfruit()
        local Client = require(game.ReplicatedStorage.Library.Client)
        for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Fruit._byUID) do
            Client.FruitCmds.Consume(i)
            wait(1)
            click2(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Contents.Ok)
        end
    end

    spawn(function()
        while true do wait(10)
            pcall(getfruit)
        end
    end)

    function click2(a)
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-50,a.AbsolutePosition.Y+50,0,true,a,1)
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-50,a.AbsolutePosition.Y+50,0,false,a,1)
    end

    function click3(a)
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-100,a.AbsolutePosition.Y+100,0,true,a,1)
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-100,a.AbsolutePosition.Y+100,0,false,a,1)
    end

    function detc4()
        click2(game:GetService("Players").LocalPlayer.PlayerGui.Rank.Frame.Side.Balance)
        click3(game:GetService("Players").LocalPlayer.PlayerGui.Rank.Frame.Side.Balance)
    end
    getgenv().numberdaily = 1
    function whatthef()
        local args = {
            [1] = getgenv().numberdaily
        }
        game:GetService("ReplicatedStorage").Network:FindFirstChild("Redeem Free Gift"):InvokeServer(unpack(args))
        getgenv().numberdaily = getgenv().numberdaily + 1
        if getgenv().numberdaily >= 12 then
            getgenv().numberdaily = 1
        end
    end


    game:GetService("RunService").Stepped:Connect(function()
        pcall(collectrank)
        pcall(detc4)
        pcall(whatthef)
    end)    

    while true do wait()
        local a,b = pcall(unlockmap)
        print(a,b)
    end
else
    while true do wait()
        pcall(function()
            local Client = require(game.ReplicatedStorage.Library.Client)
            local a = Client.Save.Get()
            for i,v in pairs(a.HiddenPresents) do
                local args = {
                    [1] = v.ID
                }
                
                game:GetService("ReplicatedStorage").Network:FindFirstChild("Hidden Presents: Found"):InvokeServer(unpack(args))
                wait(2)
            end
        end)
    end
end
