repeat wait() until game.Players
repeat wait() until game.Players.LocalPlayer
repeat wait() until game.ReplicatedStorage
repeat wait() until game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui")
repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Main")
repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui.Main.Right
repeat wait() until game:GetService("Workspace"):FindFirstChild("__MAP")
local Client = require(game.ReplicatedStorage.Library.Client)
local plr = game.Players.LocalPlayer
local Library = require(game:GetService("ReplicatedStorage").Library)
local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
local originalPlay = Library.Audio.Play
Library.Audio.Play = function(...) 
    if checkcaller() then
        local audioId, parent, pitch, volume, maxDistance, group, looped, timePosition = unpack({ ... })
        if type(audioId) == "table" then
            audioId = audioId[Random.new():NextInteger(1, #audioId)]
        end
        if not parent then
            warn("Parent cannot be nil", debug.traceback())
            return nil
        end
        if audioId == 0 then return nil end
        
        if type(audioId) == "number" or not string.find(audioId, "rbxassetid://", 1, true) then
            audioId = "rbxassetid://" .. audioId
        end
        if pitch and type(pitch) == "table" then
            pitch = Random.new():NextNumber(unpack(pitch))
        end
        if volume and type(volume) == "table" then
            volume = Random.new():NextNumber(unpack(volume))
        end
        if group then
            local soundGroup = game.SoundService:FindFirstChild(group) or nil
        else
            soundGroup = nil
        end
        if timePosition == nil then
            timePosition = 0
        else
            timePosition = timePosition
        end
        local isGargabe = false
        if not pcall(function() local _ = parent.Parent end) then
            local newParent = parent
            pcall(function()
                newParent = CFrame.new(newParent)
            end)
            parent = Instance.new("Part")
            parent.Anchored = true
            parent.CanCollide = false
            parent.CFrame = newParent
            parent.Size = Vector3.new()
            parent.Transparency = 1
            parent.Parent = workspace:WaitForChild("__DEBRIS")
            isGargabe = true
        end
        local sound = Instance.new("Sound")
        sound.SoundId = audioId
        sound.Name = "sound-" .. audioId
        sound.Pitch = pitch and 1
        sound.Volume = volume and 0.5
        sound.SoundGroup = soundGroup
        sound.Looped = looped and false
        sound.MaxDistance = maxDistance and 100
        sound.TimePosition = timePosition
        sound.RollOffMode = Enum.RollOffMode.Linear
        sound.Parent = parent
        if not require(game:GetService("ReplicatedStorage"):WaitForChild("Library"):WaitForChild("Client")).Settings.SoundsEnabled then
            sound:SetAttribute("CachedVolume", sound.Volume)
            sound.Volume = 0
        end
        sound:Play()
        getfenv(originalPlay).AddToGarbageCollection(sound, isGargabe)
        return sound
    end
    return originalPlay(...)
end

if getgenv().config.lowerfps then
    repeat task.wait() until game:IsLoaded()
    if not game:IsLoaded() then game:IsLoaded():Wait(5) end
    local UserInputService = game:GetService("UserInputService")
    local RunService = game:GetService("RunService")

    local WindowFocusReleasedFunction = function()
        RunService:Set3dRenderingEnabled(false)
        setfpscap(15)
        return
    end

    local WindowFocusedFunction = function()
        RunService:Set3dRenderingEnabled(true)
        setfpscap(15)
        return
    end

    local Initialize = function()
        UserInputService.WindowFocusReleased:Connect(WindowFocusReleasedFunction)
        UserInputService.WindowFocused:Connect(WindowFocusedFunction)
        return
    end
    Initialize()
    UserSettings():GetService("UserGameSettings").MasterVolume = 0
    local decalsyeeted = true
    local g = game
    local w = g.Workspace
    local l = g.Lighting
    local t = w.Terrain
    sethiddenproperty(l,"Technology",2)
    sethiddenproperty(t,"Decoration",false)
    t.WaterWaveSize = 0
    t.WaterWaveSpeed = 0
    t.WaterReflectance = 0
    t.WaterTransparency = 1
    l.GlobalShadows = 0
    l.FogEnd = 9e9
    l.Brightness = 0
    settings().Rendering.QualityLevel = "Level01"
    for i, v in pairs(w:GetDescendants()) do
        if v:IsA("BasePart") and not v:IsA("MeshPart") then
            v.Material = "Plastic"
            v.Transparency = 1
            v.Reflectance = 0
        elseif (v:IsA("Decal") or v:IsA("Texture")) and decalsyeeted then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 1
            v.BlastRadius = 1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
            v.Enabled = false
        elseif v:IsA("MeshPart") and decalsyeeted then
            v.Material = "Plastic"
            v.Transparency = 1
            v.Reflectance = 0
            v.TextureID = 0
        elseif v:IsA("SpecialMesh") and decalsyeeted  then
            v.TextureId=0
        elseif v:IsA("ShirtGraphic") and decalsyeeted then
            v.Graphic=1
        elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
            v[v.ClassName.."Template"]=1
        end
    end
    for i = 1,#l:GetChildren() do
        e=l:GetChildren()[i]
        if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
            e.Enabled = false
        end
    end
    w.DescendantAdded:Connect(function(v)
        pcall(function()
            if v:IsA("BasePart") and not v:IsA("MeshPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
                v.Transparency = 1
            elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
                v.Transparency = 1
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure = 1
                v.BlastRadius = 1
            elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                v.Enabled = false
            elseif v:IsA("MeshPart") and decalsyeeted then
                v.Material = "Plastic"
                v.Reflectance = 0
                v.TextureID = 0
                v.Transparency = 1
            elseif v:IsA("SpecialMesh") and decalsyeeted then
                v.TextureId=0
            elseif v:IsA("ShirtGraphic") and decalsyeeted then
                v.ShirtGraphic=1
            elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
                v[v.ClassName.."Template"]=1
            end
        end)
    end)
end

hookfunction(debug.getupvalue(Client.Network.Fire,1),function() return true end)
hookfunction(debug.getupvalue(Client.Network.Invoke,1),function() return true end)
hookfunction(debug.getupvalue(Library.Network.Invoke, 1), function() return true end)
hookfunction(debug.getupvalue(Library.Network.Fire, 1), function() return true end)
v1.WorldCmds.CanDoAction = function() return true end
local hihi = getsenv(game:GetService("Players").LocalPlayer.PlayerScripts.Scripts.GUIs.Teleport)
local Save = v1.Save.Get
local Commas = v1.Functions.Commas

function teleportto(texta)
    local v17 = v1.Directory.Areas[texta]
    if v1.WorldCmds.Get() ~= v17.world then
        print(hihi.Teleport(texta,true))
    else
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(6970.59619140625, -156.029541015625, 4101.08740234375)
    end
end

function teleportmain(texta, cframe)
    local v17 = v1.Directory.Areas[texta]
    if v1.WorldCmds.Get() ~= v17.world then
        print(hihi.Teleport(texta,true))
    end
end

function getroll(a,b)
    Client.Network.Invoke("Buy Egg", 'Barn Doodle Egg', a, b)
end

if getgenv().config.no_animation then
    for i,v in pairs(getgc(true)) do
        if (typeof(v) == 'table' and rawget(v, 'OpenEgg')) then
            v.OpenEgg = function()
                return
            end
        end
    end
end

function getboost()
    local v48 = v1.Save.Get()
    local get = v48.Boosts
    for i,v in pairs(v48.BoostsInventory) do
        if tonumber(v) ~= 0 and table.find(boost,i) and (get[i] ~= nil) then
            Client.Network.Fire("Activate Boost",i)
        end
    end
end

function getahihi()
    for i = 1 , 12 do
        Client.Network.Invoke("Redeem Free Gift", i)
    end
end

function main()
    if getgenv().statusdc == false and getgenv().sendmail == false then
        teleportto('Doodle Shop')
        if getgenv().config.egg == 1 then
            getroll(false, false)
        elseif getgenv().config.egg == 3 then
            getroll(true, false)
        else
            getroll(true, true)
        end
    end
end

function ahih1i(num)
    if num == 0 then
        return
    end
    local v48 = v1.Save.Get()
    local petmain = {}
    local petblacklist = {}
    local rslt = {}
    for i,v in pairs(v48.Pets) do 
        if not table.find(petblacklist , v48.Pets[i]["uid"]) then
            local checkne = v1.Directory.Pets[v48.Pets[i]["id"]]
            if checkne.rarity ~= "Event" then
                table.insert(petmain, {tonumber(v48.Pets[i]["s"]), v48.Pets[i]["uid"]})
            end
        end
    end

    if num == 1 and num ~= 0 then
        numreal = 1
    else
        numreal = num/2
    end

    for i =1 , numreal do 
        local index = 0
        local maxmath = -math.huge
        for j = 1 , #petmain do
            if maxmath < petmain[j][1] then
                maxmath = petmain[j][1]
                jack5triu = petmain[j][2]
                index = j
            end
        end
        table.insert(rslt , jack5triu)
        table.remove(petmain , index)
    end
    return rslt
end
getgenv().statusdc = false
function getpetdc()
    local main = v1.Save.Get()
    local getpetqueue = main.DaycareQueue
    local getdata = {}
    if getgenv().sendmail == false then
        if getgenv().config.count_pet_daycare - #getpetqueue > 0 then
            getgenv().statusdc= true
            if not game:GetService("Workspace")["__MAP"].Interactive:FindFirstChild("Daycare") then
                teleportmain("Spawn")
                return
            end
            wait(2)
            plr.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["__MAP"].Interactive.Daycare.Pad.CFrame
            wait(2)
            Client.Network.Invoke("Daycare: Enroll", ahih1i(getgenv().config.count_pet_daycare - #getpetqueue))
            return
        else
            getgenv().statusdc = true
            for i,v in pairs(getpetqueue) do
                local gettimedc = v1.Shared.DaycareComputeRemainingTime(main, getpetqueue[i])
                if gettimedc <= 2 then
                    table.insert(getdata,getpetqueue[i]["Pet"]["uid"])
                end
            end
            if #getdata == #getpetqueue then
                if not game:GetService("Workspace")["__MAP"].Interactive:FindFirstChild("Daycare") then
                    teleportmain("Spawn")
                    return
                end
                plr.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["__MAP"].Interactive.Daycare.Pad.CFrame
                wait(2)
                Client.Network.Invoke("Daycare: Claim", nil)
                wait(2)
            else
                getgenv().statusdc = false
            end
            return
        end
    end
    getgenv().statusdc = false
end

function lootbag()
    for i,v in pairs(game:GetService("Workspace")["__THINGS"].Lootbags:GetChildren()) do
        getgenv().cac = true
        v.CanCollide = false
        v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
    end
    if #game:GetService("Workspace")["__THINGS"].Lootbags:GetChildren() < 1 and #workspace.__THINGS.Orbs:GetChildren() < 1 then
        getgenv().cac = false
    end
end

function tablefind(a,b)
    if table.find(a,b) then
        return true
    end
    return false
end

function findDifferences(table1, table2)
    local differences = {}

    for _, value in ipairs(table1) do
        local found = false
        for _, v in ipairs(table2) do
            if value == v then
                found = true
                break
            end
        end
        if not found then
            table.insert(differences, value)
        end
    end

    return differences
end

function getboostsv()
    local serverBoosts = Library.ServerBoosts.GetActiveBoosts()
    local allbooth = {}
    for i,v in pairs(serverBoosts) do
        if tablefind(getgenv().config.boost, i) then
            table.insert(allbooth, i)
        end
    end
    local differences = findDifferences(allbooth, getgenv().config.boost)
    local returnboost = {}
    for key, value in pairs(differences) do
        if value ~= 'Ultra Lucky' then
            table.insert(returnboost , value)
        end
    end
    return returnboost
end

function autobostsv()
    for i,v in pairs(getboostsv()) do
        Client.Network.Fire("Activate Server Boost",v)
        wait(5)
    end
end

function webhook(status)
    spawn(function()
        local url = getgenv().config.webhook
        local data = {
        ["content"] = "Auto Comet",
        ["embeds"] = {
            {
                ["title"] = "Noti!",
                ["description"] = "Username: " .."||".. game.Players.LocalPlayer.Name.. "||".. "\nHuge You Got: " ..  status,
                ["type"] = "rich",
                ["color"] = tonumber(0xff8200),
            }
        }
        }
        local newdata = game:GetService("HttpService"):JSONEncode(data)

        local headers = {
        ["content-type"] = "application/json"
        }
        request = http_request or request or HttpPost or syn.request
        local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
        request(abcdef)
    end)
end

function setfirstdata()
    local v48 = v1.Save.Get();
    getgenv().firstdata = {}
    for i,v in pairs(v48.Pets) do
        local petcmd1 = v1.PetCmds.Get(v.uid)
        local vien1,vien2 = pcall(function()
            thuvien = v1.Directory.Pets[petcmd1.id]
        end)
        if vien1 ~= false then
            if string.lower(thuvien.name, 'huge') then
                table.insert(getgenv().firstdata, v.uid)
            end
        end
    end 
    return getgenv().firstdata
end

function get(thistype)
    if game.PlaceId == 10321372166 and string.find(string.lower(thistype), "coins") then
        return Save().HardcoreCurrency[thistype]
    else
        return Save()[thistype]
    end
end

function ComposeMail(name,pet)    
    return {
        Recipient = tostring(name), 
        Message = "????? Nhin cai lon tao", 
        Pets = pet, 
        Diamonds = 0,
    }
end

function sendneknek(a,b)
    print(Client.Network.Invoke("Send Mail",ComposeMail(a,b)))
end
getgenv().sendmail = false
function autosendmail()
    if get("Diamonds") > 100000 and #setfirstdata() > 0 then
        getgenv().sendmail = true
        teleportmain("Shop")
        wait(5)
        plr.Character.HumanoidRootPart.CFrame = CFrame.new(257.4012756347656, 97.88801574707031, 351.0747985839844)
        wait(1)
        sendneknek(getgenv().config.name_mail,setfirstdata())
        wait(3)
        webhook('Sent Huge by account: ' .. plr.Name)
    else
        getgenv().sendmail = false
    end
end

spawn(function()
    while getgenv().config.send_mail do wait(10)
        pcall(autosendmail)
    end
end)

spawn(function()
    while getgenv().config.boostserver do wait(30)
        pcall(autobostsv)
    end
end)

spawn(function()
    while true do wait()
        pcall(lootbag)
    end
end)

spawn(function()
    while getgenv().config.daycare do wait()
        local a,b = pcall(getpetdc)
        print(a,b)
    end
end)

spawn(function()
    while getgenv().config.use_luck do wait()
        pcall(getboost)
    end
end)

spawn(function()
    while getgenv().config.claim_daily do wait()
        pcall(getahihi)
    end
end)

while true do task.wait()
    pcall(main)
end
